{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])"},"docs":[{"location":"","text":"Welcome To SosoTech We specialize in IT training and Hands-on. What we do We train New and Working IT Professionals on the following fields: DevOps SRE Cloud Engineers AI Engineers","title":"About Us"},{"location":"#welcome-to-sosotech","text":"We specialize in IT training and Hands-on.","title":"Welcome To SosoTech"},{"location":"#what-we-do","text":"We train New and Working IT Professionals on the following fields: DevOps SRE Cloud Engineers AI Engineers","title":"What we do"},{"location":"Getting-Started/local-install/","text":"Locally System Requirements Windows OS systems will be the preferred OS that will be used throughout this program. Students with MaC OS can still use their MAC pcs, but may have some diffuculties with running some Windows-specific commands. Install WSL Requirments: windows 10 or greater In the windows search, Type: 'feat' Click -> Turning windows features off or on, and check select [x] virtual machine platform [x] windows Subsystem for Linux Some common WSL commands, use PowerShell $ winver $ wsl -l -v $ wsl --set-version Ubuntu-20.04 2 $ wsl --set-default-version 2 See Youtube link: Click link Install Linux Kernel Step 4 - Download the Linux kernel update package Now go to searchBar and search store Install Chocolatey Open Powershell as Administrative user Link Click-Link Run Command: Get-ExecutionPolicy If it returns Restricted, then run: Set-ExecutionPolicy AllSigned Now run the following command: Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')) Install AWSCli Run command: msiexec.exe /i https://awscli.amazonaws.com/AWSCLIV2.msi Install Choco Packages choco install kubectl choco install k9s choco install terraform choco install kubens kubectx Install Docker Desktop/k8s use link: Click link to install Restart System","title":"Local-Installation"},{"location":"Getting-Started/local-install/#locally","text":"System Requirements Windows OS systems will be the preferred OS that will be used throughout this program. Students with MaC OS can still use their MAC pcs, but may have some diffuculties with running some Windows-specific commands.","title":"Locally"},{"location":"Getting-Started/local-install/#install-wsl","text":"Requirments: windows 10 or greater In the windows search, Type: 'feat' Click -> Turning windows features off or on, and check select [x] virtual machine platform [x] windows Subsystem for Linux Some common WSL commands, use PowerShell $ winver $ wsl -l -v $ wsl --set-version Ubuntu-20.04 2 $ wsl --set-default-version 2 See Youtube link: Click link Install Linux Kernel Step 4 - Download the Linux kernel update package Now go to searchBar and search store","title":"Install WSL"},{"location":"Getting-Started/local-install/#install-chocolatey","text":"Open Powershell as Administrative user Link Click-Link Run Command: Get-ExecutionPolicy If it returns Restricted, then run: Set-ExecutionPolicy AllSigned Now run the following command: Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))","title":"Install Chocolatey"},{"location":"Getting-Started/local-install/#install-awscli","text":"Run command: msiexec.exe /i https://awscli.amazonaws.com/AWSCLIV2.msi","title":"Install AWSCli"},{"location":"Getting-Started/local-install/#install-choco-packages","text":"choco install kubectl choco install k9s choco install terraform choco install kubens kubectx","title":"Install Choco Packages"},{"location":"Getting-Started/local-install/#install-docker-desktopk8s","text":"use link: Click link to install Restart System","title":"Install Docker Desktop/k8s"},{"location":"Getting-Started/remote-install/","text":"Remote Server Installation links Install IAM EKS authenticator Right-Click to open Link in a New Tab curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/aws-iam-authenticator chmod +x ./aws-iam-authenticator sudo mv ./aws-iam-authenticator /usr/local/bin aws-iam-authenticator help Install docker in ec2 Right-Click to open Link in a New Tab Install AWSCLI Right-Click to open Link in a New Tab Install Terraform Right-Click to open Link in a New Tab Install Kubens + kubectx Right-Click to open Link in a New Tab Install HelM Right-Click to open Link in a New Tab curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 chmod 700 get_helm.sh ./get_helm.sh Install Kubectl Right-Click to open Link in a New Tab curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" curl -LO \"https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256\" echo \"$(<kubectl.sha256) kubectl\" | sha256sum --check sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl kubectl version --client --output=yaml Install MkDocs Right-Click to open Link in a New Tab pip install mkdocs mkdocs helm mkdocs new my-soso-package cd my-soso-package tree Install PiP on RHeL REDHAT sudo yum info python*-pip //get the pip version, then install the version sudo yum install python39-pip python3 --version curl -O https://bootstrap.pypa.io/get-pip.py python3 get-pip.py --user Install Trivy Right-Click to open Link in a New Tab sudo yum -y update sudo wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.deb sudo dpkg -i trivy_0.18.3_Linux-64bit.deb trivy i nginx //scanning nginx image trivy i nginx | grep -i critical trivy i nginx:alpine | grep -i critical","title":"Remote Installation"},{"location":"Getting-Started/remote-install/#remote-server","text":"","title":"Remote Server"},{"location":"Getting-Started/remote-install/#installation-links","text":"","title":"Installation links"},{"location":"Getting-Started/remote-install/#install-iam-eks-authenticator","text":"Right-Click to open Link in a New Tab curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/aws-iam-authenticator chmod +x ./aws-iam-authenticator sudo mv ./aws-iam-authenticator /usr/local/bin aws-iam-authenticator help","title":"Install IAM EKS authenticator"},{"location":"Getting-Started/remote-install/#install-docker-in-ec2","text":"Right-Click to open Link in a New Tab","title":"Install docker in ec2"},{"location":"Getting-Started/remote-install/#install-awscli","text":"Right-Click to open Link in a New Tab","title":"Install AWSCLI"},{"location":"Getting-Started/remote-install/#install-terraform","text":"Right-Click to open Link in a New Tab","title":"Install Terraform"},{"location":"Getting-Started/remote-install/#install-kubens-kubectx","text":"Right-Click to open Link in a New Tab","title":"Install Kubens + kubectx"},{"location":"Getting-Started/remote-install/#install-helm","text":"Right-Click to open Link in a New Tab curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 chmod 700 get_helm.sh ./get_helm.sh","title":"Install HelM"},{"location":"Getting-Started/remote-install/#install-kubectl","text":"Right-Click to open Link in a New Tab curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" curl -LO \"https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256\" echo \"$(<kubectl.sha256) kubectl\" | sha256sum --check sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl kubectl version --client --output=yaml","title":"Install Kubectl"},{"location":"Getting-Started/remote-install/#install-mkdocs","text":"Right-Click to open Link in a New Tab pip install mkdocs mkdocs helm mkdocs new my-soso-package cd my-soso-package tree","title":"Install MkDocs"},{"location":"Getting-Started/remote-install/#install-pip-on-rhel","text":"REDHAT sudo yum info python*-pip //get the pip version, then install the version sudo yum install python39-pip python3 --version curl -O https://bootstrap.pypa.io/get-pip.py python3 get-pip.py --user","title":"Install PiP on RHeL"},{"location":"Getting-Started/remote-install/#install-trivy","text":"Right-Click to open Link in a New Tab sudo yum -y update sudo wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.deb sudo dpkg -i trivy_0.18.3_Linux-64bit.deb trivy i nginx //scanning nginx image trivy i nginx | grep -i critical trivy i nginx:alpine | grep -i critical","title":"Install Trivy"},{"location":"weekly/contacts/cicd/","text":"Jenkins Setup NOTE: Don't Forget to update your inbound Security Group with TCP-port 8080 If you have any issues, then: curl the IP address if you had any issues. curl http://[your-put-IP]/latest/user-data LIKE SO: --> curl http://56.22.1.2/latest/user-data Also refer to site to update your code: Optional-Link Ubuntu installation script #!/bin/bash sudo apt update sudo apt install openjdk-11-jdk -y sudo apt install maven -y curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee \\ /usr/share/keyrings/jenkins-keyring.asc > /dev/null echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \\ https://pkg.jenkins.io/debian-stable binary/ | sudo tee \\ /etc/apt/sources.list.d/jenkins.list > /dev/null sudo apt-get update sudo apt-get install jenkins -y Check and start the jenkins service sudo systemctl status jenkins sudo systemctl start jenkins java -version whereis git Get Jenkins Password sudo cat /var/lib/jenkins/secrets/initialAdminPassword INSTALL JDK8 and MAVEN In Server terminal, Install Maven and JDK8 sudo apt update sudo apt install openjdk-8-jdk -y INSTALL MAVEN Go to the Maven site and get latest version: Right-click and copy .tar link sudo su - cd /opt apt install wget wget https://dlcdn.apache.org/maven/maven-3/3.9.1/binaries/apache-maven-3.9.1-bin.tar.gz tar -xvzf apache-maven-3.9.1-bin.tar^C mv apache-maven-3.9.1 maven rm -rf apache-maven-3.9.1-bin.tar.gz CD to ROOT and Copy the java path The path to add in Jenkins will be: /usr/lib/jvm/java-1.8.0-openjdk-amd64 . See below Photo sudo su - ls /usr/lib/jvm Configure [Git, Maven, JVM ]on Jenkins GUI . In the Jenkins UI --> manage Jenkins --> Global Tool Configuration [save] JDK | Git | MAVEV Configure Credentials Configure the following credentials - AWS - DockerHub --> (generate Token) My account --> security --> secret text - k8s Config - sonarqube --> (generate Token) My account --> security --> secret text Navigate to: Jenkins UI --> manage Jenkins --> Manage Credentials --> System --> Global credentials configure Dockerhub Log into your dockerhub account and create a token in settings --> security: LINK Jenkins Jobs Demo Jobs Pipeline There are 2 Options to use here: 1. Pipeline script 2. Pipeline script from SCM Some Sample Pipeline Scripts: pipeline { agent any stages { stage('Welcome to sosotech') { steps { sh ''' aws --version ''' } } } } FreeStyle Docker","title":"Jenkins"},{"location":"weekly/contacts/cicd/#jenkins","text":"","title":"Jenkins"},{"location":"weekly/contacts/cicd/#setup","text":"NOTE: Don't Forget to update your inbound Security Group with TCP-port 8080 If you have any issues, then: curl the IP address if you had any issues. curl http://[your-put-IP]/latest/user-data LIKE SO: --> curl http://56.22.1.2/latest/user-data Also refer to site to update your code: Optional-Link Ubuntu installation script #!/bin/bash sudo apt update sudo apt install openjdk-11-jdk -y sudo apt install maven -y curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee \\ /usr/share/keyrings/jenkins-keyring.asc > /dev/null echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \\ https://pkg.jenkins.io/debian-stable binary/ | sudo tee \\ /etc/apt/sources.list.d/jenkins.list > /dev/null sudo apt-get update sudo apt-get install jenkins -y Check and start the jenkins service sudo systemctl status jenkins sudo systemctl start jenkins java -version whereis git Get Jenkins Password sudo cat /var/lib/jenkins/secrets/initialAdminPassword INSTALL JDK8 and MAVEN In Server terminal, Install Maven and JDK8 sudo apt update sudo apt install openjdk-8-jdk -y INSTALL MAVEN Go to the Maven site and get latest version: Right-click and copy .tar link sudo su - cd /opt apt install wget wget https://dlcdn.apache.org/maven/maven-3/3.9.1/binaries/apache-maven-3.9.1-bin.tar.gz tar -xvzf apache-maven-3.9.1-bin.tar^C mv apache-maven-3.9.1 maven rm -rf apache-maven-3.9.1-bin.tar.gz CD to ROOT and Copy the java path The path to add in Jenkins will be: /usr/lib/jvm/java-1.8.0-openjdk-amd64 . See below Photo sudo su - ls /usr/lib/jvm Configure [Git, Maven, JVM ]on Jenkins GUI . In the Jenkins UI --> manage Jenkins --> Global Tool Configuration [save] JDK | Git | MAVEV","title":"Setup"},{"location":"weekly/contacts/cicd/#configure-credentials","text":"Configure the following credentials - AWS - DockerHub --> (generate Token) My account --> security --> secret text - k8s Config - sonarqube --> (generate Token) My account --> security --> secret text Navigate to: Jenkins UI --> manage Jenkins --> Manage Credentials --> System --> Global credentials","title":"Configure Credentials"},{"location":"weekly/contacts/cicd/#configure-dockerhub","text":"Log into your dockerhub account and create a token in settings --> security: LINK","title":"configure Dockerhub"},{"location":"weekly/contacts/cicd/#jenkins-jobs","text":"Demo Jobs","title":"Jenkins Jobs"},{"location":"weekly/contacts/cicd/#pipeline","text":"There are 2 Options to use here: 1. Pipeline script 2. Pipeline script from SCM Some Sample Pipeline Scripts: pipeline { agent any stages { stage('Welcome to sosotech') { steps { sh ''' aws --version ''' } } } }","title":"Pipeline"},{"location":"weekly/contacts/cicd/#freestyle","text":"","title":"FreeStyle"},{"location":"weekly/contacts/cicd/#docker","text":"","title":"Docker"},{"location":"weekly/services/azure/","text":"Azure Free azure account and go to the postal link: Free account-Link Portal-Link Whats hierarchy Azure provides four levels of management: management groups -> Subscriptions -> Resource Groups -> Resources Management groups help you manage access, policy, and compliance for multiple subscriptions. All subscriptions in a management group automatically inherit the conditions that are applied to the management group. Subscriptions associate user accounts with the resources that they create. Resource groups are logical containers where you can deploy and manage Azure resources like web apps, databases, and storage accounts. Resources are instances of services that you can create, such as virtual machines, storage, and SQL databases. Set a budget Azure Storage types Azure Storage offers five core services: Blob Storage helps you create data lakes for your analytics needs, and provides storage to build powerful cloud-native and mobile apps. File Storage : Managed file shares for cloud or on-premises deployments. Queue Storage : A messaging store for reliable messaging between application components. Table Storage : A NoSQL store for schemaless storage of structured data. Managed Disk Storage : Block-level storage volumes for Azure VMs. Azure Elastic SAN (preview) : A fully integrated solution that simplifies deploying, scaling, managing, and configuring a SAN in Azure. Azure also offers a list of SQL Data and non-SQL Databases. For More on Azure Storage, see link: Azure Storage Link Azure Networking Service For More on Azure networking, see link: Azure networking Link Azure and Terraform Azure provder Terraform link: Terraform link Azure authentication from the terminal az login az account list az account list --query [*].[name,id] In azure terminal - bash, - Create an AD service principle for RBAC using below command, - Next, go to subscriptions and get the subscription ID. az ad sp create-for-rbac -n \"Terraform-Soso\" --role=\"Contributor\" --scopes=\"/subscriptions/b965a029-32b4-4671-b283-350344c89091\" Go to azure app registration and see that it was created. Copy the info created. In my case: { \"appId\": \"297ec591-b16e-42ce-9e03-1ebd725aa3f9\", \"displayName\": \"Terraform-Soso\", \"password\": \"FZG8Q~-uPKCxRNgIg8JVAKYO2xm4j..S1SpFoaxg\", \"tenant\": \"054da2e5-2fbf-483f-961e-a3b2839bd53c\" } Azure Active Directory Azure AD part of Microsoft Entra , is an identity and Access Management service that provides single sign-on, multifactor authentication, and conditional access to guard against 99.9 percent of cybersecurity attacks. Accounts and subscriptions Account: Subscription: Tenant: Resource Groups: users There are three types of user accounts that you can have in Azure AD: federated synchronized cloud Optional: Create a new tenant for your organization For more info see: To create a new tenant After creating tenant, it comes with nothin installed, so I will have to add subscriptions... Note : You can switch between tenants Storage Storage Access Control (IAM)","title":"Azure"},{"location":"weekly/services/azure/#azure","text":"Free azure account and go to the postal link: Free account-Link Portal-Link","title":"Azure"},{"location":"weekly/services/azure/#whats-hierarchy","text":"Azure provides four levels of management: management groups -> Subscriptions -> Resource Groups -> Resources Management groups help you manage access, policy, and compliance for multiple subscriptions. All subscriptions in a management group automatically inherit the conditions that are applied to the management group. Subscriptions associate user accounts with the resources that they create. Resource groups are logical containers where you can deploy and manage Azure resources like web apps, databases, and storage accounts. Resources are instances of services that you can create, such as virtual machines, storage, and SQL databases.","title":"Whats hierarchy"},{"location":"weekly/services/azure/#set-a-budget","text":"","title":"Set a budget"},{"location":"weekly/services/azure/#azure-storage-types","text":"Azure Storage offers five core services: Blob Storage helps you create data lakes for your analytics needs, and provides storage to build powerful cloud-native and mobile apps. File Storage : Managed file shares for cloud or on-premises deployments. Queue Storage : A messaging store for reliable messaging between application components. Table Storage : A NoSQL store for schemaless storage of structured data. Managed Disk Storage : Block-level storage volumes for Azure VMs. Azure Elastic SAN (preview) : A fully integrated solution that simplifies deploying, scaling, managing, and configuring a SAN in Azure. Azure also offers a list of SQL Data and non-SQL Databases. For More on Azure Storage, see link: Azure Storage Link","title":"Azure Storage types"},{"location":"weekly/services/azure/#azure-networking-service","text":"For More on Azure networking, see link: Azure networking Link","title":"Azure Networking Service"},{"location":"weekly/services/azure/#azure-and-terraform","text":"Azure provder Terraform link: Terraform link","title":"Azure and Terraform"},{"location":"weekly/services/azure/#azure-authentication-from-the-terminal","text":"az login az account list az account list --query [*].[name,id] In azure terminal - bash, - Create an AD service principle for RBAC using below command, - Next, go to subscriptions and get the subscription ID. az ad sp create-for-rbac -n \"Terraform-Soso\" --role=\"Contributor\" --scopes=\"/subscriptions/b965a029-32b4-4671-b283-350344c89091\" Go to azure app registration and see that it was created. Copy the info created. In my case: { \"appId\": \"297ec591-b16e-42ce-9e03-1ebd725aa3f9\", \"displayName\": \"Terraform-Soso\", \"password\": \"FZG8Q~-uPKCxRNgIg8JVAKYO2xm4j..S1SpFoaxg\", \"tenant\": \"054da2e5-2fbf-483f-961e-a3b2839bd53c\" }","title":"Azure authentication from the terminal"},{"location":"weekly/services/azure/#azure-active-directory","text":"Azure AD part of Microsoft Entra , is an identity and Access Management service that provides single sign-on, multifactor authentication, and conditional access to guard against 99.9 percent of cybersecurity attacks.","title":"Azure Active Directory"},{"location":"weekly/services/azure/#accounts-and-subscriptions","text":"Account: Subscription: Tenant: Resource Groups:","title":"Accounts and subscriptions"},{"location":"weekly/services/azure/#users","text":"There are three types of user accounts that you can have in Azure AD: federated synchronized cloud","title":"users"},{"location":"weekly/services/azure/#optional-create-a-new-tenant-for-your-organization","text":"For more info see: To create a new tenant After creating tenant, it comes with nothin installed, so I will have to add subscriptions... Note : You can switch between tenants","title":"Optional: Create a new tenant for your organization"},{"location":"weekly/services/azure/#storage","text":"","title":"Storage"},{"location":"weekly/services/azure/#storage-access-control-iam","text":"","title":"Storage Access Control (IAM)"}]}